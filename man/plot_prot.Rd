% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_prot.R
\name{plot_prot}
\alias{plot_prot}
\title{Protein structure diagram.}
\usage{
plot_prot(
  sequence,
  id,
  hyp_col = "#868686FF",
  gpi_col = "#0073C2FF",
  nsp_col = "#CD534CFF",
  ag_col = "#E5E5E5FF",
  tm_col = "#EFC000FF",
  hyp = TRUE,
  gpi = c("bigpi", "predgpi", "netgpi", "none"),
  nsp = TRUE,
  ag = TRUE,
  tm = TRUE,
  domain = TRUE,
  disorder = FALSE,
  hyp_scan = if (ag == TRUE && hyp == TRUE) TRUE else FALSE,
  dom_sort = c("ievalue", "abc", "cba"),
  progress = FALSE,
  gpi_size = 4,
  gpi_shape = 18,
  ...
)
}
\arguments{
\item{sequence}{String representing a protein amino acid sequence.}

\item{id}{String representing a protein identifier. Will be converted using \code{\link[base]{make.names}}.}

\item{hyp_col}{Plotting color of predicted hydroxyproline positions. At default set to: '#868686FF'.}

\item{gpi_col}{Plotting color of the predicted omega site (glycosylphosphatidylinositol attachment). At default set to: '#0073C2FF'.}

\item{nsp_col}{Plotting color of the N-terminal signal peptide. At default set to: '#CD534CFF'.}

\item{ag_col}{Plotting color of the AG glycomodul spans. At default set to: '#E5E5E5FF'.}

\item{tm_col}{Plotting color of the transmembrane regions. At default set to: '#EFC000FF'.}

\item{hyp}{Boolean, should hydroxyprolines be plotted.}

\item{gpi}{A string indicating if \code{\link[ragp]{get_big_pi}} (gpi = "bigpi"), \code{\link[ragp]{get_pred_gpi}} (gpi = "predgpi") or \code{\link[ragp]{get_netGPI}} (gpi = "netgpi") should be called when predicting omega sites. To turn off omega site prediction use gpi = "none". At default set to "bigpi". Alternatively the output data frame of the mentioned functions (called with simplify = TRUE) can be supplied.}

\item{nsp}{Boolean, should the N-terminal signal peptide predictions obtained using \code{\link[ragp]{get_signalp}} be plotted. Alternatively the output data frame from \code{\link[ragp]{get_signalp}} can be supplied.}

\item{ag}{Boolean, should the AG glycomodul spans be plotted.}

\item{tm}{Boolean, should the transmembrane region predictions obtained using \code{\link[ragp]{get_phobius}} be plotted. Alternatively the output data frame from \code{\link[ragp]{get_phobius}} can be supplied.}

\item{domain}{Boolean, should the domain predictions obtained using \code{\link[ragp]{get_hmm}}  be plotted. Alternatively the output data frame from \code{\link[ragp]{get_hmm}} can be supplied.}

\item{disorder}{Boolean, should disordered region predictions obtained using \code{\link[ragp]{get_espritz}} be plotted. Alternatively the output data frame from \code{\link[ragp]{get_espritz}} (called with simplify = TRUE) can be supplied.}

\item{hyp_scan}{Boolean, if ag = TRUE, should \code{\link[ragp]{scan_ag}} be performed on \code{\link[ragp]{predict_hyp}} output thus scanning only arabinogalactan motifs which contain predicted hydroxyprolines.}

\item{dom_sort}{One of c("ievalue", "abc", "cba"), defaults to "abc". Domain plotting order. If 'ievalue' domains with the lowest ievalue as determined by hmmscan will be plotted above. If 'abc' or 'cba' the order is determined by domain Names.}

\item{progress}{Boolean, whether to show the progress bar, at default set to FALSE.}

\item{gpi_size}{Integer, the size of the gpi symbol. Appropriate values are 1 - 10.}

\item{gpi_shape}{Integer, the shape of the gpi symbol. Appropriate values are 0 - 25}

\item{...}{Appropriate arguments passed to \code{\link[ragp]{get_signalp}}, \code{\link[ragp]{get_espritz}}, \code{\link[ragp]{predict_hyp}}, \code{\link[ragp]{get_hmm}} and \code{\link[ragp]{scan_ag}}.}
}
\value{
A ggplot2 plot object
}
\description{
Plots a diagram of protein structure based on hmmscan domain annotation and several types of predictions.
}
\examples{
library(ragp)
library(ggplot2)
ind <- c(23, 5, 80, 81, 345)
pred <- plot_prot(sequence = at_nsp$sequence[ind],
                  id = at_nsp$Transcript.id[ind],
                  bitscore = 30) #passed to get_hmm
pred +
  theme(legend.position = "bottom",
        legend.direction = "vertical")
        
#alternatively:      
nsp <- get_signalp(data = at_nsp[ind,],
                   id = Transcript.id,
                   sequence = sequence)
                    
hmm <- get_hmm(data = at_nsp[ind,],
               id = Transcript.id,
               sequence = sequence)
               
gpi <- get_netGPI(data = at_nsp[ind,],
                 id = Transcript.id,
                 sequence = sequence)                                    

tm <- get_phobius(data = at_nsp[ind,],
                  id = Transcript.id,
                  sequence = sequence)                                                        
 
disorder <- get_espritz(data = at_nsp[ind,],	
                        id = Transcript.id,	
                        sequence = sequence)
        
pred2 <- plot_prot(sequence = at_nsp$sequence[ind],
                   id = at_nsp$Transcript.id[ind],
                   tm = tm,
                   nsp = nsp,
                   gpi = gpi,
                   domain = hmm,
                   disorder = disorder,
                   bitscore = 30)
                   
                   
pred2 +
  theme(legend.position = "bottom",
        legend.direction = "vertical")
        
#mixing both methods is also a possibility
        
}
\seealso{
\code{\link[ragp]{get_signalp}} \code{\link[ragp]{get_phobius}} \code{\link[ragp]{get_hmm}} \code{\link[ragp]{get_espritz}} \code{\link[ragp]{predict_hyp}} \code{\link[ragp]{scan_ag}}
}
