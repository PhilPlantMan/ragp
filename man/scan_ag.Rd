% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scan_ag.R
\name{scan_ag}
\alias{scan_ag}
\title{Find AGII glycomodules in protein sequences}
\usage{
scan_ag(sequence, id = NULL, dim = NULL, div = NULL,
  type = c("conservative", "extended"), exclude_ext = c("no", "yes", "all"))
}
\arguments{
\item{sequence}{A vector of strings representing protein amino acid sequences.}

\item{id}{An optional vector of strings representing the names of the corresponding sequences.}

\item{dim}{An integer defining the minimum number of close dimmers to be considered, at default set to 3.}

\item{div}{An integer defining the maximum number of amino acids that can separate the dimmers for them to be considered, at default to 10}

\item{type}{One of c("conservative", "extended"), if conservative only A, S and T will be considered as possible P|O partners in dimmers, if extended dimmers involving P|O with A, S, T, G and V will be consdered. At default set to "extended".}

\item{exclude_ext}{One of c("no", "yes", "all"), should extensin (SPPP+) regions be excluded from the search: "no" - do not exclude SPPP+; "yes" - exclude all SPPP+; "all" - exclude all PPP+}
}
\value{
A named list with components:
\describe{
  \item{$id}{Character vector, as supplied in the function call or NA if not supplied}
  \item{$sequence}{Character vector, each element corresponding to one input sequence, with matched letters (amino acids in dimmers that satisfy the user set conditions) in uppercase}
  \item{$AG_aa}{Numeric vector, each element corresponding to the number of matched letters (amino acids in dimmers that satisfy the user set conditions) in each input sequence}
  \item{$AG_locations}{List of numeric vectors, each element corresponding to the locations of found dimmers}
  \item{$total_length}{Numeric vector, with elements corresponding to the total length of the found stretches of dimmers (including the amino acids betwean dimers in a match) in each sequence}
  \item{$longest}{Numeric vector, with elements corresponding to the maximum length of the found stretches of dimmers (including the amino acids betwean dimers in a match) in each sequence}
  \item{$locations}{List of matrices, each element describing the start and end locations of the found stretches of dimmers (including the amino acids betwean dimers in a match)}
  \item{$dim}{Integer, as from input, default dim = 3}
  \item{$div}{Integer, as from input, default div = 10}
  \item{$type}{Character, as from input, one of c("conservative", "extended")}
}
}
\description{
AGII glycomodules are amino acid dimmers: OA, OS, OT, AO, SO and TO (and probably OG, OV, GO and VO) which are in close proximity to each other (Tan et al., 2003).
Where: O - hydroxyproline, A - alanine, S - serine, T - threnonine, G - glycine and V - valine. This function attempts to find the mentioned dimmers according to user specified rules. Since the positions of hydroxyprolines are usually unknown, all prolines are considered instead. If any sequence from the supplied contains "O" the function will consider only true AGII glycomodules.
}
\details{
The function can be supplied with the sequences resulting from predict_hyp in which case only AGII glycomodules containing O instead of P will be considered.
}
\examples{
data(at_nsp)

# find all stretches of AP, SP, TP, PA, PS and PT dimmers where there are at least
# 3 dimmers separated by a maximim of 10 amino acids betwean each two dimmers
at_nsp_ag <- scan_ag(sequence = at_nsp$sequence[1:20],
                     id = at_nsp$Transcript.id[1:20],
                     dim = 3,
                     div = 10,
                     type = "conservative")

# find all stretches of AP, SP, TP, GP, VP, PA, PS, PT PG, and PV dimmers where there
# are at least 2 dimmers separated by a maximim of 4 amino acids betwean them
at_nsp_ag <- scan_ag(sequence = at_nsp$sequence[1:20],
                     id = at_nsp$Transcript.id[1:20],
                     dim = 2,
                     div = 4,
                     type = "extended")

# check how much the results differ when extensin regions are excluded
at_sp_ag <- scan_ag(sequence = at_nsp$sequence,
                     id = at_nsp$Transcript.id,
                     dim = 3,
                     div = 6,
                     type = "extended")


at_sp_ag_ext <- scan_ag(sequence = at_nsp$sequence,
                     id = at_nsp$Transcript.id,
                     dim = 3,
                     div = 6,
                     type = "extended", exclude_ext = "yes")

at_sp_ag_ext$sequence[at_sp_ag_ext$sequence != at_sp_ag$sequence]


}
\references{
Tan L, Leykam JF, Kieliszewski MJ. (2003) Glycosylation motifs that direct arabinogalactan addition to arabinogalactan proteins. Plant Physiol 132: 1362-136
}
\seealso{
\code{\link[ragp]{calculate_bias} \link[ragp]{predict_hyp}}
}
